<%#
# New

This view is the template for the "new resource" page.
It displays a header, and then renders the `_form` partial
to do the heavy lifting.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Form][1].
  Contains helper methods to help display a form,
  and knows which attributes should be displayed in the resource's form.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Form
%>

<% content_for(:title) { "New #{page.resource_name.titleize}" } %>

<header class="header">
  <h1 class="header__heading"><%= content_for(:title) %></h1>
  <div class="header__actions">
    <%= link_to 'Back', :back, class: "button" %>
  </div>
</header>

<div class="notebox" style="margin: 25px">
  <p>Note: If you are uploading a mixcloud set, just fill in the mixcloud URL and everything
  else will be taken care of automatically (image, miniplayer, title, etc). If you are uploading a set
  from somewhere else, leave the mixcloud_url blank, but make sure you upload an alternative_image, and set the title,
  and the alternative_url to the download or the set page.</p>
  </section></p>
</div>

<%= render 'form', page: page %>
